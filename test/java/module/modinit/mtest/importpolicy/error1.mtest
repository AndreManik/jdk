#
# Verify that the custom import policy is invoked
# and that exceptions it throws are handled
#
>>> begin module m1
> annotations
@MainClass("m1.MainA")
@ImportPolicyClass("m1.ImportPolicyImpl")
@ImportModules({
    @ImportModule(name="java.se"),
    @ImportModule(name="m2")
})
> export
m1.Main
>> begin class m1.MainA
        if (ImportPolicyImpl.CALLED == false) {
            throw new Exception("Import policy not called");
        }
        new m2.MainB().run("from m1");
>> end class
>> begin class m1.ImportPolicyImpl
> super
implements ImportPolicy
> body
    static volatile boolean CALLED;

    public Map<ImportDependency,VersionConstraint> getImports(ModuleDefinition moduleDef,
            Map<ImportDependency,VersionConstraint> constraints, ImportPolicy defaultImportPolicy)
            throws ModuleInitializationException {
        CALLED = true;
        throw new RuntimeException("aborted");
    }
>> end class
>>> end module
>>> begin module m2
> annotations
@ImportModules({
    @ImportModule(name="java.se")
})
> export
m2.MainB
>> begin class m2.MainB
>> end class
>>> end module
>>> begin test m1
exception ModuleInitializationException
>>> end test
